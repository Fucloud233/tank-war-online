/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // 导入javafx插件
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

repositories {
    // 优先在本地仓库中查找文件
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'

    // 使用jackson来解析和绑定JSON
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.15.2'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.15.2'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

application {
    // Define the main class for the application.
//    mainClass = 'com.tankWar.lobby.Main'
    mainClass = 'com.tankWar.game.Main'
}


// 导入javafx
javafx {
    version = "20"
    modules = [ 'javafx.controls' ]
}

// 设置尝试将多个文件复制到同一目的地时使用的策略
DuplicatesStrategy duplicatesStrategy = DuplicatesStrategy.INHERIT

// 修改为使用UTF-8来构建
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 启用并行测试
test {
    maxParallelForks = 4
}

////////////////////////////////////////////////////

// 定义客户端应用程序的JavaExec任务
task runClientApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.tankWar.game.client.ClientTest' // 客户端应用程序的主类
}

// 定义服务端应用程序的JavaExec任务
task runServerApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.tankWar.game.server.ServerTest' // 服务端应用程序的主类
}
